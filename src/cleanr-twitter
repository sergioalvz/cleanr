#!/usr/bin/env node

const program = require("commander");

const Count = require("./commands/Count");
const Select = require("./commands/Select");
const Verify = require("./commands/Verify");

async function count({ file }) {
  const command = new Count({ file });
  const count = await command.perform();

  console.log(count);
}

async function select({ file, until }) {
  const command = new Select({ file });
  const tweets = await command.perform({ until });

  const output = tweets.map(tweet => tweet.id).join("\n");

  console.log(output);
}

async function verify({ accessToken, accessTokenSecret }) {
  const command = new Verify({ accessToken, accessTokenSecret });

  try {
    await command.perform();
  } catch (error) {
    console.error(error);

    process.exit(1);
  }
}

program
  .command("count")
  .description("counts the number of tweets")
  .option("-f, --file [path]", "path to back-up file")
  .action(count);

program
  .command("select")
  .description("returns identifiers with matching criteria")
  .option("-f, --file [path]", "path to back-up file")
  .option("--until [date]", "date until that identifiers will be returned")
  .action(select);

program
  .command("verify")
  .description("verifies that everything's okay")
  .option("-t, --access-token [token]", "user's access token")
  .option("-s, --access-token-secret [secret]", "user's access token secret")
  .action(verify);

program.parse(process.argv);
